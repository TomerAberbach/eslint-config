import typescriptPlugin from '@typescript-eslint/eslint-plugin'
import browserslist from 'browserslist'
import importPlugin from 'eslint-plugin-import-x'
import jsxA11yPlugin from 'eslint-plugin-jsx-a11y'
import markdownPlugin from 'eslint-plugin-markdown'
import reactPlugin from 'eslint-plugin-react'
import reactHooksPlugin from 'eslint-plugin-react-hooks'
import testingLibraryPlugin from 'eslint-plugin-testing-library'
import tsDocPlugin from 'eslint-plugin-tsdoc'
import unicornPlugin from 'eslint-plugin-unicorn'
import globals from 'globals'
import { readPackageUp } from 'read-package-up'
import stylisticPlugin from '@stylistic/eslint-plugin'
import typescriptParser from '@typescript-eslint/parser'
import commandPluginConfig from 'eslint-plugin-command/config'
import vitestPlugin from 'eslint-plugin-vitest'
import securityPlugin from 'eslint-plugin-security'

const getBaseGlobals = async () => {
  const isNode = await isNodeSupported()
  const isBrowser = isBrowserSupported()

  if (isNode && isBrowser) {
    return globals[`shared-node-browser`]
  }

  if (isNode) {
    return { ...globals.node, ...globals.worker }
  }

  if (isBrowser) {
    return { ...globals.browser, ...globals.serviceworker }
  }

  return {}
}

const isNodeSupported = async () => {
  const { packageJson = {} } = (await readPackageUp()) ?? {}
  const { engines = {} } = packageJson

  return Boolean(engines.node)
}

const isBrowserSupported = () => Boolean(browserslist.findConfig(process.cwd()))

const ERROR = `error`
const OFF = `off`

export default [
  // All files
  {
    languageOptions: { globals: await getBaseGlobals() },
    plugins: {
      stylistic: stylisticPlugin,
      import: importPlugin,
      unicorn: unicornPlugin,
      security: securityPlugin,
    },
    rules: {
      'array-callback-return': ERROR,
      'constructor-super': ERROR,
      'for-direction': ERROR,
      'getter-return': ERROR,
      'no-async-promise-executor': ERROR,
      'no-class-assign': ERROR,
      'no-compare-neg-zero': ERROR,
      'no-cond-assign': ERROR,
      'no-const-assign': ERROR,
      'no-constant-binary-expression': ERROR,
      'no-constructor-return': ERROR,
      'no-debugger': ERROR,
      'no-dupe-args': ERROR,
      'no-dupe-class-members': ERROR,
      'no-dupe-else-if': ERROR,
      'no-dupe-keys': ERROR,
      'no-duplicate-case': ERROR,
      'no-empty-character-class': ERROR,
      'no-empty-pattern': ERROR,
      'no-fallthrough': [ERROR, { commentPattern: `^Falls through$` }],
      'no-func-assign': ERROR,
      'no-import-assign': ERROR,
      'no-invalid-regexp': ERROR,
      'no-irregular-whitespace': [
        ERROR,
        {
          skipStrings: false,
          skipComments: false,
          skipRegExps: false,
          skipTemplates: false,
        },
      ],
      'no-loss-of-precision': ERROR,
      'no-new-native-nonconstructor': ERROR,
      'no-obj-calls': ERROR,
      'no-promise-executor-return': ERROR,
      'no-prototype-builtins': ERROR,
      'no-self-assign': ERROR,
      'no-setter-return': ERROR,
      'no-sparse-arrays': ERROR,
      'no-template-curly-in-string': ERROR,
      'no-this-before-super': ERROR,
      'no-undef': ERROR,
      'no-unexpected-multiline': ERROR,
      'no-unreachable': ERROR,
      'no-unreachable-loop': ERROR,
      'no-unsafe-finally': ERROR,
      'no-unsafe-negation': ERROR,
      'no-unsafe-optional-chaining': ERROR,
      'no-unused-private-class-members': ERROR,
      'no-unused-vars': [ERROR, { ignoreRestSiblings: true }],
      'no-use-before-define': [
        ERROR,
        { functions: false, classes: false, variables: false },
      ],
      'require-atomic-updates': ERROR,
      'use-isnan': ERROR,
      'valid-typeof': ERROR,
      'arrow-body-style': ERROR,
      'capitalized-comments': [
        ERROR,
        `always`,
        { ignoreConsecutiveComments: true },
      ],
      'class-methods-use-this': ERROR,
      'consistent-return': [ERROR, { treatUndefinedAsUnspecified: false }],
      curly: [ERROR, `all`],
      'default-case-last': ERROR,
      'default-param-last': ERROR,
      'dot-notation': ERROR,
      eqeqeq: [ERROR, `always`, { null: `ignore` }],
      'func-name-matching': ERROR,
      'func-names': [ERROR, `never`],
      'func-style': [ERROR, `declaration`, { allowArrowFunctions: true }],
      'guard-for-in': ERROR,
      'logical-assignment-operators': ERROR,
      'new-cap': ERROR,
      'no-array-constructor': ERROR,
      'no-case-declarations': ERROR,
      'no-empty': [ERROR, { allowEmptyCatch: true }],
      'no-eval': ERROR,
      'no-extend-native': ERROR,
      'no-extra-boolean-cast': [ERROR, { enforceForLogicalOperands: true }],
      'no-extra-label': ERROR,
      'no-global-assign': ERROR,
      'no-implicit-coercion': [
        ERROR,
        { boolean: true, number: true, string: true },
      ],
      'no-implied-eval': ERROR,
      'no-invalid-this': ERROR,
      'no-label-var': ERROR,
      'no-lone-blocks': ERROR,
      'no-lonely-if': ERROR,
      'no-multi-assign': ERROR,
      'no-new': ERROR,
      'no-new-func': ERROR,
      'no-new-wrappers': ERROR,
      'no-nonoctal-decimal-escape': ERROR,
      'no-octal-escape': ERROR,
      'no-redeclare': ERROR,
      'no-regex-spaces': ERROR,
      'no-return-assign': ERROR,
      'no-sequences': ERROR,
      'no-throw-literal': ERROR,
      'no-undef-init': ERROR,
      'no-unneeded-ternary': ERROR,
      'no-unused-labels': ERROR,
      'no-unused-expressions': ERROR,
      'no-useless-call': ERROR,
      'no-useless-catch': ERROR,
      'no-useless-computed-key': ERROR,
      'no-useless-concat': ERROR,
      'no-useless-constructor': ERROR,
      'no-useless-escape': ERROR,
      'no-useless-rename': ERROR,
      'no-useless-return': ERROR,
      'no-var': ERROR,
      'no-warning-comments': [
        ERROR,
        { terms: [`FIXME`], location: `anywhere` },
      ],
      'no-with': ERROR,
      'object-shorthand': ERROR,
      'one-var': [ERROR, `never`],
      'operator-assignment': ERROR,
      'prefer-const': [ERROR, { destructuring: `all` }],
      'prefer-destructuring': [
        ERROR,
        { array: false, object: true },
        { enforceForRenamedProperties: false },
      ],
      'prefer-exponentiation-operator': ERROR,
      'prefer-named-capture-group': ERROR,
      'prefer-numeric-literals': ERROR,
      'prefer-object-has-own': ERROR,
      'prefer-object-spread': ERROR,
      'prefer-promise-reject-errors': ERROR,
      'prefer-regex-literals': ERROR,
      'prefer-rest-params': ERROR,
      'prefer-spread': ERROR,
      'prefer-template': ERROR,
      radix: ERROR,
      'require-unicode-regexp': ERROR,
      'symbol-description': ERROR,
      yoda: ERROR,

      'stylistic/quotes': [ERROR, `backtick`, { avoidEscape: true }],
      'stylistic/lines-between-class-members': [
        ERROR,
        `always`,
        { exceptAfterSingleLine: true },
      ],
      'stylistic/spaced-comment': [
        ERROR,
        `always`,
        { line: { markers: [`/`, `=>`] } },
      ],

      'import/no-empty-named-blocks': ERROR,
      'import/no-useless-path-segments': ERROR,
      'import/consistent-type-specifier-style': [ERROR, `prefer-top-level`],
      'import/first': ERROR,
      'import/newline-after-import': ERROR,
      'import/no-duplicates': ERROR,
      'sort-imports': [ERROR, { ignoreDeclarationSort: true }],
      'import/order': ERROR,

      'unicorn/better-regex': ERROR,
      'unicorn/catch-error-name': ERROR,
      'unicorn/consistent-destructuring': ERROR,
      'unicorn/consistent-empty-array-spread': ERROR,
      'unicorn/custom-error-definition': ERROR,
      'unicorn/error-message': ERROR,
      'unicorn/escape-case': ERROR,
      'unicorn/filename-case': [ERROR, { case: `kebabCase`, ignore: [`\\$`] }],
      'unicorn/new-for-builtins': ERROR,
      'unicorn/no-abusive-eslint-disable': ERROR,
      'unicorn/no-array-for-each': ERROR,
      'unicorn/no-await-in-promise-methods': ERROR,
      'unicorn/no-console-spaces': ERROR,
      'unicorn/no-for-loop': ERROR,
      'unicorn/no-instanceof-array': ERROR,
      'unicorn/no-lonely-if': ERROR,
      'unicorn/no-negated-condition': ERROR,
      'unicorn/no-negation-in-equality-check': ERROR,
      'unicorn/no-new-array': ERROR,
      'unicorn/no-new-buffer': ERROR,
      'unicorn/no-object-as-default-parameter': ERROR,
      'unicorn/no-single-promise-in-promise-methods': ERROR,
      'unicorn/no-static-only-class': ERROR,
      'unicorn/no-thenable': ERROR,
      'unicorn/no-typeof-undefined': ERROR,
      'unicorn/no-unreadable-array-destructuring': ERROR,
      'unicorn/no-unreadable-iife': ERROR,
      'unicorn/no-useless-fallback-in-spread': ERROR,
      'unicorn/no-useless-length-check': ERROR,
      'unicorn/no-useless-promise-resolve-reject': ERROR,
      'unicorn/no-useless-spread': ERROR,
      'unicorn/no-useless-switch-case': ERROR,
      'unicorn/no-zero-fractions': ERROR,
      'unicorn/number-literal-case': ERROR,
      'unicorn/numeric-separators-style': ERROR,
      'unicorn/prefer-array-find': ERROR,
      'unicorn/prefer-array-flat': ERROR,
      'unicorn/prefer-array-flat-map': ERROR,
      'unicorn/prefer-array-index-of': ERROR,
      'unicorn/prefer-array-some': ERROR,
      'unicorn/prefer-at': ERROR,
      'unicorn/prefer-blob-reading-methods': ERROR,
      'unicorn/prefer-date-now': ERROR,
      'unicorn/prefer-default-parameters': ERROR,
      'unicorn/prefer-export-from': ERROR,
      'unicorn/prefer-includes': ERROR,
      'unicorn/prefer-logical-operator-over-ternary': ERROR,
      'unicorn/prefer-math-trunc': ERROR,
      'unicorn/prefer-modern-math-apis': ERROR,
      'unicorn/prefer-negative-index': ERROR,
      'unicorn/prefer-node-protocol': ERROR,
      'unicorn/prefer-object-from-entries': ERROR,
      'unicorn/prefer-optional-catch-binding': ERROR,
      'unicorn/prefer-prototype-methods': ERROR,
      'unicorn/prefer-regexp-test': ERROR,
      'unicorn/prefer-set-has': ERROR,
      'unicorn/prefer-set-size': ERROR,
      'unicorn/prefer-string-raw': ERROR,
      'unicorn/prefer-string-replace-all': ERROR,
      'unicorn/prefer-string-slice': ERROR,
      'unicorn/prefer-string-starts-ends-with': ERROR,
      'unicorn/prefer-string-trim-start-end': ERROR,
      'unicorn/prefer-switch': ERROR,
      'unicorn/prefer-ternary': ERROR,
      'unicorn/prefer-top-level-await': ERROR,
      'unicorn/prefer-type-error': ERROR,
      'unicorn/relative-url-style': ERROR,
      'unicorn/require-array-join-separator': ERROR,
      'unicorn/require-number-to-fixed-digits-argument': ERROR,
      'unicorn/switch-case-braces': [ERROR, `avoid`],
      'unicorn/text-encoding-identifier-case': ERROR,
      'unicorn/throw-new-error': ERROR,

      'security/detect-bidi-characters': ERROR,
      'security/detect-buffer-noassert': ERROR,
      'security/detect-eval-with-expression': ERROR,
      'security/detect-unsafe-regex': ERROR,
    },
  },

  // Allow config files to access node globals regardless of package target.
  {
    files: [`**/*.config.{js,mjs,cjs,ts,mts,cts}`],
    languageOptions: { globals: globals.node },
  },

  // TypeScript
  {
    files: [`**/*.{ts,mts,cts,tsx,mtsx,ctsx}`],
    languageOptions: {
      parser: typescriptParser,
      parserOptions: { project: true },
    },
    plugins: { typescript: typescriptPlugin, tsdoc: tsDocPlugin },
    rules: {
      // Handled by TypeScript.
      'constructor-super': OFF,
      'getter-return': OFF,
      'no-class-assign': OFF,
      'no-const-assign': OFF,
      'no-constant-binary-expression': OFF,
      'no-constructor-return': OFF,
      'no-dupe-args': OFF,
      'no-dupe-class-members': OFF,
      'no-dupe-keys': OFF,
      'no-func-assign': OFF,
      'no-import-assign': OFF,
      'no-new-native-nonconstructor': OFF,
      'no-obj-calls': OFF,
      'no-setter-return': OFF,
      'no-this-before-super': OFF,
      'no-undef': OFF,
      'no-unsafe-negation': OFF,
      'no-unsafe-optional-chaining': OFF,
      'valid-typeof': OFF,
      'consistent-return': OFF,
      'no-redeclare': OFF,

      'typescript/adjacent-overload-signatures': ERROR,
      'typescript/array-type': ERROR,
      'typescript/await-thenable': ERROR,
      'typescript/ban-ts-comment': ERROR,
      'typescript/ban-types': ERROR,
      'class-methods-use-this': OFF,
      'typescript/class-literal-property-style': ERROR,
      'typescript/class-methods-use-this': ERROR,
      'typescript/consistent-generic-constructors': ERROR,
      'typescript/consistent-indexed-object-style': ERROR,
      'typescript/consistent-type-assertions': ERROR,
      'typescript/consistent-type-definitions': [ERROR, `type`],
      'typescript/consistent-type-exports': ERROR,
      'typescript/consistent-type-imports': ERROR,
      'default-param-last': OFF,
      'typescript/default-param-last': ERROR,
      'dot-notation': OFF,
      'typescript/dot-notation': ERROR,
      'typescript/explicit-member-accessibility': ERROR,
      'typescript/explicit-module-boundary-types': ERROR,
      'typescript/method-signature-style': ERROR,
      'no-array-constructor': OFF,
      'typescript/no-array-constructor': ERROR,
      'typescript/no-array-delete': ERROR,
      'typescript/no-base-to-string': ERROR,
      'typescript/no-confusing-non-null-assertion': ERROR,
      'typescript/no-confusing-void-expression': [
        ERROR,
        { ignoreArrowShorthand: true, ignoreVoidOperator: true },
      ],
      'typescript/no-duplicate-enum-values': ERROR,
      'typescript/no-duplicate-type-constituents': ERROR,
      'typescript/no-empty-interface': [ERROR, { allowSingleExtends: true }],
      'typescript/no-empty-object-type': ERROR,
      'typescript/no-extra-non-null-assertion': ERROR,
      'typescript/no-extraneous-class': ERROR,
      'typescript/no-floating-promises': ERROR,
      'typescript/no-for-in-array': ERROR,
      'no-implied-eval': OFF,
      'typescript/no-implied-eval': ERROR,
      'typescript/no-import-type-side-effects': ERROR,
      'typescript/no-inferrable-types': ERROR,
      'no-invalid-this': OFF,
      'typescript/no-invalid-this': ERROR,
      'typescript/no-invalid-void-type': ERROR,
      'no-loss-of-precision': OFF,
      'typescript/no-loss-of-precision': ERROR,
      'typescript/no-meaningless-void-operator': ERROR,
      'typescript/no-misused-new': ERROR,
      'typescript/no-misused-promises': ERROR,
      'typescript/no-mixed-enums': ERROR,
      'typescript/no-namespace': ERROR,
      'typescript/no-non-null-asserted-nullish-coalescing': ERROR,
      'typescript/no-non-null-asserted-optional-chain': ERROR,
      'typescript/no-redundant-type-constituents': ERROR,
      'typescript/no-unnecessary-boolean-literal-compare': ERROR,
      'typescript/no-unnecessary-condition': ERROR,
      'typescript/no-unnecessary-parameter-property-assignment': ERROR,
      'typescript/no-unnecessary-qualifier': ERROR,
      'typescript/no-unnecessary-template-expression': ERROR,
      'typescript/no-unnecessary-type-arguments': ERROR,
      'typescript/no-unnecessary-type-assertion': ERROR,
      'typescript/no-unnecessary-type-constraint': ERROR,
      'typescript/no-unsafe-argument': ERROR,
      'typescript/no-unsafe-assignment': ERROR,
      'typescript/no-unsafe-call': ERROR,
      'typescript/no-unsafe-declaration-merging': ERROR,
      'typescript/no-unsafe-enum-comparison': ERROR,
      'typescript/no-unsafe-member-access': ERROR,
      'typescript/no-unsafe-return': ERROR,
      'typescript/no-unsafe-unary-minus': ERROR,
      'no-unused-expressions': OFF,
      'typescript/no-unused-expressions': ERROR,
      'no-unused-vars': OFF,
      'typescript/no-unused-vars': [ERROR, { ignoreRestSiblings: true }],
      'no-use-before-define': OFF,
      'typescript/no-use-before-define': [
        ERROR,
        {
          functions: false,
          classes: false,
          variables: false,
          enums: false,
          typedefs: false,
        },
      ],
      'no-useless-constructor': OFF,
      'typescript/no-useless-constructor': ERROR,
      'typescript/no-useless-empty-export': ERROR,
      'typescript/non-nullable-type-assertion-style': ERROR,
      'no-throw-literal': OFF,
      'typescript/only-throw-error': ERROR,
      'typescript/parameter-properties': ERROR,
      'typescript/prefer-as-const': ERROR,
      'prefer-destructuring': OFF,
      'typescript/prefer-destructuring': [
        ERROR,
        { array: false, object: true },
        { enforceForRenamedProperties: false },
      ],
      'unicorn/prefer-array-find': OFF,
      'typescript/prefer-find': ERROR,
      'unicorn/no-for-loop': OFF,
      'typescript/prefer-for-of': ERROR,
      'typescript/prefer-function-type': ERROR,
      'unicorn/prefer-includes': OFF,
      'typescript/prefer-includes': ERROR,
      'typescript/prefer-namespace-keyword': ERROR,
      'typescript/prefer-nullish-coalescing': ERROR,
      'typescript/prefer-optional-chain': ERROR,
      'prefer-promise-reject-errors': OFF,
      'typescript/prefer-promise-reject-errors': ERROR,
      'typescript/prefer-readonly': ERROR,
      'typescript/prefer-reduce-type-parameter': ERROR,
      'typescript/prefer-regexp-exec': ERROR,
      'typescript/prefer-return-this-type': ERROR,
      'unicorn/prefer-string-starts-ends-with': OFF,
      'typescript/prefer-string-starts-ends-with': ERROR,
      'typescript/require-array-sort-compare': ERROR,
      'typescript/restrict-plus-operands': ERROR,
      'typescript/restrict-template-expressions': ERROR,
      'typescript/switch-exhaustiveness-check': ERROR,
      'typescript/triple-slash-reference': ERROR,
      'typescript/unbound-method': ERROR,
      'typescript/unified-signatures': ERROR,
      'typescript/use-unknown-in-catch-callback-variable': ERROR,

      'tsdoc/syntax': ERROR,
    },
  },

  // React
  {
    files: [`**/*.{jsx,mjsx,cjsx,tsx,mtsx,ctsx}`],
    languageOptions: {
      parserOptions: {
        ecmaFeatures: {
          jsx: true,
        },
      },
    },
    settings: { react: { version: `detect` } },
    plugins: {
      react: reactPlugin,
      'react-hooks': reactHooksPlugin,
      'jsx-a11y': jsxA11yPlugin,
    },
    rules: {
      // It's common to need to throw non-Errors in React.
      'no-throw-literal': OFF,

      'react/button-has-type': ERROR,
      'react/hook-use-state': ERROR,
      'react/jsx-boolean-value': ERROR,
      'react/jsx-curly-brace-presence': ERROR,
      'react/jsx-key': ERROR,
      'react/jsx-no-comment-textnodes': ERROR,
      'react/jsx-no-constructed-context-values': ERROR,
      'react/jsx-no-duplicate-props': ERROR,
      'react/jsx-no-leaked-render': ERROR,
      'react/jsx-no-script-url': ERROR,
      'react/jsx-no-target-blank': ERROR,
      'react/jsx-no-undef': ERROR,
      'react/jsx-no-useless-fragment': ERROR,
      'react/jsx-pascal-case': ERROR,
      'react/jsx-uses-vars': ERROR,
      'react/no-children-prop': ERROR,
      'react/no-danger-with-children': ERROR,
      'react/no-deprecated': ERROR,
      'react/no-invalid-html-attribute': ERROR,
      'react/no-unescaped-entities': ERROR,
      'react/no-unknown-property': ERROR,
      'react/self-closing-comp': ERROR,
      'react/void-dom-elements-no-children': ERROR,

      'react-hooks/rules-of-hooks': ERROR,
      'react-hooks/exhaustive-deps': ERROR,

      'jsx-a11y/alt-text': ERROR,
      'jsx-a11y/anchor-ambiguous-text': ERROR,
      'jsx-a11y/anchor-has-content': ERROR,
      'jsx-a11y/anchor-is-valid': ERROR,
      'jsx-a11y/aria-activedescendant-has-tabindex': ERROR,
      'jsx-a11y/aria-props': ERROR,
      'jsx-a11y/aria-proptypes': ERROR,
      'jsx-a11y/aria-role': ERROR,
      'jsx-a11y/aria-unsupported-elements': ERROR,
      'jsx-a11y/autocomplete-valid': ERROR,
      'jsx-a11y/click-events-have-key-events': ERROR,
      'jsx-a11y/heading-has-content': ERROR,
      'jsx-a11y/html-has-lang': ERROR,
      'jsx-a11y/iframe-has-title': ERROR,
      'jsx-a11y/img-redundant-alt': ERROR,
      'jsx-a11y/interactive-supports-focus': ERROR,
      'jsx-a11y/label-has-associated-control': ERROR,
      'jsx-a11y/lang': ERROR,
      'jsx-a11y/media-has-caption': ERROR,
      'jsx-a11y/mouse-events-have-key-events': ERROR,
      'jsx-a11y/no-access-key': ERROR,
      'jsx-a11y/no-aria-hidden-on-focusable': ERROR,
      'jsx-a11y/no-autofocus': ERROR,
      'jsx-a11y/no-distracting-elements': ERROR,
      'jsx-a11y/no-interactive-element-to-noninteractive-role': ERROR,
      'jsx-a11y/no-noninteractive-element-interactions': ERROR,
      'jsx-a11y/no-noninteractive-element-to-interactive-role': ERROR,
      'jsx-a11y/no-noninteractive-tabindex': ERROR,
      'jsx-a11y/no-redundant-roles': ERROR,
      'jsx-a11y/no-static-element-interactions': ERROR,
      'jsx-a11y/role-has-required-aria-props': ERROR,
      'jsx-a11y/role-supports-aria-props': ERROR,
      'jsx-a11y/scope': ERROR,
      'jsx-a11y/tabindex-no-positive': ERROR,
    },
  },

  // TypeScript React
  {
    files: [`**/*.{tsx,mtsx,ctsx}`],
    plugins: { typescript: typescriptPlugin },
    rules: {
      // It's common to need to throw non-Errors in React.
      'typescript/only-throw-error': OFF,

      // Too annoying for components.
      'typescript/explicit-module-boundary-types': OFF,
    },
  },

  {
    files: [`test/**/*`],
    plugins: {
      vitest: vitestPlugin,
      'testing-library': testingLibraryPlugin,
    },
    rules: {
      'vitest/consistent-test-it': [ERROR, { fn: `test` }],
      'vitest/expect-expect': ERROR,
      'vitest/no-alias-methods': ERROR,
      'vitest/no-commented-out-tests': ERROR,
      'vitest/no-identical-title': ERROR,
      'vitest/no-test-return-statement': ERROR,
      'vitest/prefer-each': ERROR,
      'vitest/prefer-equality-matcher': ERROR,
      'vitest/prefer-expect-resolves': ERROR,
      'vitest/prefer-hooks-in-order': ERROR,
      'vitest/prefer-mock-promise-shorthand': ERROR,
      'vitest/prefer-strict-equal': ERROR,
      'vitest/prefer-to-be': ERROR,
      'vitest/prefer-to-be-object': ERROR,
      'vitest/prefer-to-contain': ERROR,
      'vitest/prefer-to-have-length': ERROR,
      'vitest/prefer-todo': ERROR,
      'vitest/require-local-test-context-for-concurrent-snapshots': ERROR,
      'vitest/require-to-throw-message': ERROR,
      'vitest/valid-describe-callback': ERROR,
      'vitest/valid-expect': ERROR,
      'vitest/valid-title': ERROR,

      'testing-library/await-async-events': ERROR,
      'testing-library/await-async-queries': ERROR,
      'testing-library/await-async-utils': ERROR,
      'testing-library/no-await-sync-events': ERROR,
      'testing-library/no-await-sync-queries': ERROR,
      'testing-library/no-container': ERROR,
      'testing-library/no-dom-import': ERROR,
      'testing-library/no-global-regexp-flag-in-query': ERROR,
      'testing-library/no-manual-cleanup': ERROR,
      'testing-library/no-node-access': ERROR,
      'testing-library/no-promise-in-fire-event': ERROR,
      'testing-library/no-render-in-lifecycle': ERROR,
      'testing-library/no-unnecessary-act': ERROR,
      'testing-library/no-wait-for-multiple-assertions': ERROR,
      'testing-library/no-wait-for-side-effects': ERROR,
      'testing-library/no-wait-for-snapshot': ERROR,
      'testing-library/prefer-explicit-assert': ERROR,
      'testing-library/prefer-find-by': ERROR,
      'testing-library/prefer-presence-queries': ERROR,
      'testing-library/prefer-query-by-disappearance': ERROR,
      'testing-library/prefer-screen-queries': ERROR,
      'testing-library/prefer-user-event': ERROR,
      'testing-library/render-result-naming-convention': ERROR,
    },
  },

  // Markdown
  {
    files: [`**/*.md`],
    plugins: { markdown: markdownPlugin },
    processor: `markdown/markdown`,
  },

  // Markdown code blocks
  {
    files: [`**/*.md/*.{js,mjs,cjs,jsx,mjsx,cjsx,ts,mts,cts,tsx,mtsx,ctsx}`],
    rules: {
      // Not useful for code examples.
      'no-undef': OFF,
      'no-unused-vars': OFF,
    },
  },

  commandPluginConfig(),
]
